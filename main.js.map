{"version":3,"file":"main.js","mappings":"mBAEA,MAAMA,EAAiB,ICFR,MACbC,WAAAA,GACEC,KAAKC,SAAW,EAClB,CAEAC,IAAAA,CAAKC,EAAYC,EAAUC,GACzB,MAAMC,EAAiBC,SAASC,cAAc,OAC9CF,EAAeG,UAAUC,IAAI,UAAW,kBAExC,MAAMC,EAAgBJ,SAASC,cAAc,OAC7CG,EAAcF,UAAUC,IAAI,kBAC5BC,EAAcC,YAAcT,EAE5B,MAAMU,EAAQN,SAASC,cAAc,OACrCK,EAAMJ,UAAUC,IAAI,SAEpB,MAAMI,EAAcP,SAASC,cAAc,OAC3CM,EAAYL,UAAUC,IAAI,gBAC1BI,EAAYF,YAAcR,EAE1BE,EAAeS,YAAYJ,GAC3BL,EAAeS,YAAYD,GAC3BR,EAAeS,YAAYF,GAE3BN,SAASS,KAAKD,YAAYT,GAE1B,MAAMW,EAAKC,YAAYC,MAEvBnB,KAAKC,SAASmB,KAAK,CACjBH,KACAZ,QAASC,IAGX,MAAM,WAAEe,EAAU,eAAEC,GAAmBC,OAAOC,iBAAiBnB,IACzD,KAAEoB,EAAI,IAAEC,GAAQrB,EAAQsB,wBAExBC,EAAcH,EAAOpB,EAAQwB,YAAc,EAAIvB,EAAeuB,YAAc,EAClFvB,EAAewB,MAAML,KAAQ,GAAEG,MAC/B,MAAMG,EAAaL,EACfM,WAAWX,GACXW,WAAWV,GACXhB,EAAe2B,aAGnB,OAFA3B,EAAewB,MAAMJ,IAAO,GAAEK,MAEvBd,CACT,CAEAiB,MAAAA,CAAOjB,GACWjB,KAAKC,SAASkC,MAAMC,GAAMA,EAAEnB,KAAOA,IAE3CZ,QAAQ6B,SAEhBlC,KAAKC,SAAWD,KAAKC,SAASoC,QAAQD,GAAMA,EAAEnB,KAAOA,GACvD,GDlDF,IAAIqB,EAAiB,GACrB,MAEMC,EAAYhC,SAASiC,cAAc,cAmBzCjB,OAAOkB,iBAAiB,SAVPC,IACfJ,EAAeK,SAASC,GAAY9C,EAAeoC,OAAOU,EAAQ3B,MAClEqB,EAAiB,GAEjB,MAAM,OAAEO,GAAWH,EAXDI,IAAsBC,EAYpCF,EAAOpC,UAAUuC,SAAS,SAChB,QAjBI,0EAIsBD,EAaJF,EAZpCP,EAAelB,KAAK,CAClB6B,KAAMF,EAAGE,KACThC,GAAInB,EAAeI,KAUP,QAjBI,0EAO6B6C,KAW/C,IAKF,MAAMG,EAAS3C,SAASC,cAAc,UACtC0C,EAAOC,KAAO,SACdD,EAAOE,UAAY,0BACnBF,EAAOzC,UAAUC,IAAI,MAAO,SAAU,cAExB6B,EAAUc,iBAAiB,SACrB,GACdtC,YAAYmC,E","sources":["webpack://ahj_5/./src/js/app.js","webpack://ahj_5/./src/js/Popover.js"],"sourcesContent":["import Popover from './Popover';\n\nconst popoverFactory = new Popover();\nlet actualPopovers = [];\nconst popoverText = 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Rerum, nobis?';\n\nconst container = document.querySelector('.container');\n\nconst showPopover = (eaderText, bodyText, el) => {\n  actualPopovers.push({\n    name: el.name,\n    id: popoverFactory.show(eaderText, bodyText, el),\n  });\n};\n\nconst onClick = (e) => {\n  actualPopovers.forEach((popover) => popoverFactory.remove(popover.id));\n  actualPopovers = [];\n\n  const { target } = e;\n  if (target.classList.contains('btn')) {\n    showPopover('Title', popoverText, target);\n  }\n};\n\nwindow.addEventListener('click', onClick);\n\nconst button = document.createElement('button');\nbutton.type = 'button';\nbutton.innerHTML = 'Click to toggle popover';\nbutton.classList.add('btn', 'btn-lg', 'btn-danger');\n\nconst tasks = container.querySelectorAll('.task');\nconst task1 = tasks[0];\ntask1.appendChild(button);\n","export default class Popover {\n  constructor() {\n    this.popovers = [];\n  }\n\n  show(headerText, bodyText, element) {\n    const popoverElement = document.createElement('div');\n    popoverElement.classList.add('popover', 'bs-popover-top');\n\n    const popoverHeader = document.createElement('div');\n    popoverHeader.classList.add('popover-header');\n    popoverHeader.textContent = headerText;\n\n    const arrow = document.createElement('div');\n    arrow.classList.add('arrow');\n\n    const popoverBody = document.createElement('div');\n    popoverBody.classList.add('popover-body');\n    popoverBody.textContent = bodyText;\n\n    popoverElement.appendChild(popoverHeader);\n    popoverElement.appendChild(popoverBody);\n    popoverElement.appendChild(arrow);\n\n    document.body.appendChild(popoverElement);\n\n    const id = performance.now();\n\n    this.popovers.push({\n      id,\n      element: popoverElement,\n    });\n\n    const { paddingTop, borderTopWidth } = window.getComputedStyle(element);\n    const { left, top } = element.getBoundingClientRect();\n\n    const leftPopover = left + element.offsetWidth / 2 - popoverElement.offsetWidth / 2;\n    popoverElement.style.left = `${leftPopover}px`;\n    const topPopover = top\n      - parseFloat(paddingTop)\n      - parseFloat(borderTopWidth)\n      - popoverElement.offsetHeight;\n    popoverElement.style.top = `${topPopover}px`;\n\n    return id;\n  }\n\n  remove(id) {\n    const popover = this.popovers.find((t) => t.id === id);\n\n    popover.element.remove();\n\n    this.popovers = this.popovers.filter((t) => t.id !== id);\n  }\n}\n"],"names":["popoverFactory","constructor","this","popovers","show","headerText","bodyText","element","popoverElement","document","createElement","classList","add","popoverHeader","textContent","arrow","popoverBody","appendChild","body","id","performance","now","push","paddingTop","borderTopWidth","window","getComputedStyle","left","top","getBoundingClientRect","leftPopover","offsetWidth","style","topPopover","parseFloat","offsetHeight","remove","find","t","filter","actualPopovers","container","querySelector","addEventListener","e","forEach","popover","target","showPopover","el","contains","name","button","type","innerHTML","querySelectorAll"],"sourceRoot":""}